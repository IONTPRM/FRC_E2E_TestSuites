*** Settings ***
Documentation     These User Keywords *do not need of IONTester*. They are based on Thomas Jaspers library (https://github.com/ThomasJaspers/robotframework-dblibrary) approved by Robot Framework. The library is an Open Source library. The supported DBMS are:
...
...               1) Oracle
...
...               2) Sybase
...
...               3) SQLServer
...
...               The User Keywords requires:
...
...               1) The Thomas Jaspers library
...
...               2) The JODBC library for the DBMS you are using:
...
...               2.1) Oracle JODBC library
...
...               2.2) Sybase JODBC library
...
...               2.3) SQLServer JODBC library
Library           Dialogs
Library           BuiltIn
Library           String
Library           Collections
Library           org.robot.database.keywords.DatabaseLibrary
Library           oracle.jdbc.driver.OracleDriver
Library           com.microsoft.sqlserver.jdbc.SQLServerDriver
Library           com.sybase.jdbc3.jdbc.SybDriver

*** Keyword ***
SQL Connect to DBMS
    [Arguments]    ${DBType}    ${DBHost}    ${DBPort}    ${DBName}    ${DBUser}    ${DBPwd}
    [Documentation]    *Description:*
    ...
    ...    Use this command to connect to a DBMS.
    ...
    ...    Supported DBMS are:
    ...
    ...    *SYBASE | ORACLE | SQLSERVER*
    ...
    ...    *Parameters:*
    ...
    ...    <DBType>: It can be *SYBASE | ORACLE | SQLSERVER*
    ...
    ...    <DBHost>: It is the IP Address of the DBMS.
    ...
    ...    <DBPort>: It is the port of the DBMS (in case of SQLServer this is not needed, you can put any number).
    ...
    ...    <DBName>: It is the name of the db to connect to.
    ...
    ...    <DBUser>: It is the user able to connect to the db.
    ...
    ...    <DBPwd>: It is the password of the user able to connect to the db.
    ...
    ...    *Requirements:*
    ...
    ...    The following java jar files are required:
    ...
    ...    jsqllib.jar(java db access lib)
    ...
    ...    ojdbc6.jar (JODBC drivers for Oracle)
    ...
    ...    sqljdbc4.jar (JODBC drivers for SQLServer)
    ...
    ...    jconn3.jar (JODBC drivers for Sybase).
    ...
    ...    *Example:*
    ...
    ...    Connecting to Sybase:
    ...
    ...    | SQL Connect | SYBASE | 192.168.150.94 | 5000 | REFDATA_DB | sa | ${EMPTY} |
    ...
    ...    Connecting to SQLServer:
    ...
    ...    | SQL Connect | SQLSERVER | 192.168.150.94 | 2500 | REFDATA_DB | username1 | pwd1 |
    ...
    ...    Connecting to Oracle:
    ...
    ...    | SQL Connect | ORACLE | 192.168.150.94 | 2500 | REFDATA_DB | ora1 | ora1 |
    ${conn_str}    Set Variable    ${EMPTY}
    ${driver_conn}    Set Variable    ${EMPTY}
    ${conn_str}    Set Variable If    '${DBType}'=='SYBASE'    jdbc:sybase:Tds:${DBHost}:${DBPort}/${DBName}    '${DBType}'=='ORACLE'    jdbc:oracle:thin:@${DBHost}:${DBPort}:${DBName}    '${DBType}'=='SQLSERVER'    jdbc:sqlserver://${DBHost};DatabaseName=${DBName};SelectMethod=cursor
    Run Keyword If    '${conn_str}'=='None'    FailForWrongDBType
    ${driver_conn}    Set Variable If    '${DBType}'=='SYBASE'    com.sybase.jdbc3.jdbc.SybDriver    '${DBType}'=='ORACLE'    oracle.jdbc.driver.OracleDriver    '${DBType}'=='SQLSERVER'    com.microsoft.sqlserver.jdbc.SQLServerDriver
    Builtin.Log    ${driver_conn}
    Builtin.Log    ${conn_str}
    Builtin.Log    ${DBUser}
    Builtin.Log    ${DBPwd}
    org.robot.database.keywords.DatabaseLibrary.connectToDatabase    ${driver_conn}    ${conn_str}    ${DBUser}    ${DBPwd}

SQL Disconnect from DBMS
    [Documentation]    *Description:*
    ...
    ...    Use this command to disconnect from a DBMS.
    ...
    ...    Supported DBMS are:
    ...
    ...    *SYBASE | ORACLE | SQLSERVER*
    ...
    ...    *Parameters:*
    ...
    ...    No parameters needed.
    ...
    ...    *Requirements:*
    ...
    ...    The following java jar files are required:
    ...
    ...    jsqllib.jar(java db access lib)
    ...
    ...    ojdbc6.jar (JODBC drivers for Oracle) (*needed in case you have to connect to Oracle DBMS*).
    ...
    ...    sqljdbc4.jar (JODBC drivers for SQLServer) (*needed in case you have to connect to SQLServer DBMS*).
    ...
    ...    jconn3.jar (JODBC drivers for Sybase) (*needed in case you have to connect to Sybase DBMS*).
    ...
    ...    *Example:*
    ...
    ...    Connecting to Sybase:
    ...
    ...    | SQL Connect | SYBASE | 192.168.150.94 | 5000 | REFDATA_DB | sa | ${EMPTY} |
    ...
    ...    Disconnecting from Sybase:
    ...
    ...    | SQL Disconnect from DBMS |
    org.robot.database.keywords.DatabaseLibrary.disconnectFromDatabase

SQL Verify Fields of a Table
    [Arguments]    ${FieldNameList}    ${FieldExpectedValueList}    ${TableName}    ${WhereClause}    ${TimeoutSec}=0
    [Documentation]    *Description:*
    ...
    ...    Use this command to verify that, either a field or a list of fields of a specific table is/are populated with expected values. The supported DBMS are:
    ...
    ...    *SYBASE | ORACLE | SQLSERVER*
    ...
    ...    *Parameters:*
    ...
    ...    <FieldNameList>: It can be either a simple field name or a list of fields (separated by comma characters). In case it is a list, no blank character has to be put between the comma character and the field name
    ...
    ...    Example: Price,Qty
    ...
    ...    <FieldExpectedValueList>: It is the expected value. It can be either a simple field value or a list of fields values (separated by either pipe or comma character). In case it is a list, no blank character has to be putted between the (pipe/comma) character and the field name
    ...
    ...    Example
    ...
    ...    100.23|200
    ...
    ...    100.23,200 <TableName>: It is the name of the table to be verified.
    ...
    ...    <WhereClause>: It is the condition identifying the records to be checked (standard SQL syntax for where clause).
    ...
    ...    *Requirements:*
    ...
    ...    The following java jar files are required:
    ...
    ...    jsqllib.jar(java db access lib)
    ...
    ...    ojdbc6.jar (JODBC drivers for Oracle) (*needed in case you have to connect to Oracle DBMS*).
    ...
    ...    sqljdbc4.jar (JODBC drivers for SQLServer) (*needed in case you have to connect to SQLServer DBMS*).
    ...
    ...    jconn3.jar (JODBC drivers for Sybase) (*needed in case you have to connect to Sybase DBMS*).
    ...
    ...    *Example:*
    ...
    ...    We want to verify the fields Price and Qty are populated with the values 100.2 and 20 for the records into the table TRADE identified by the condition InstrumentId='IT0190991216' And Status=1
    ...
    ...    | SQL Verify Fields of a Table | Price,Qty |100.2,20 | TRADE | InstrumentId='IT0190991216' And Status=1 |
    Log    ${FieldNameList}
    Log    ${FieldExpectedValueList}
    Log    ${TableName}
    Log    ${WhereClause}
    Run Keyword If    ${TimeoutSec} == 0    org.robot.database.keywords.DatabaseLibrary.checkContentForRowIdentifiedByWhereClause    ${FieldNameList}    ${FieldExpectedValueList}    ${TableName}    ${WhereClause}
    Run Keyword If    ${TimeoutSec} != 0    org.robot.database.keywords.DatabaseLibrary.checkContentForRowIdentifiedByWhereClause    ${FieldNameList}    ${FieldExpectedValueList}    ${TableName}    ${WhereClause}    ${TimeoutSec}

SQL Check Number of Records of a Table
    [Arguments]    ${TableName}    ${ExpectedNumberOfRecords}    ${WhereClause}
    [Documentation]    *Description:*
    ...
    ...    Use this command to verify the number of records verifying a condition. The supported DBMS are:
    ...
    ...    *SYBASE | ORACLE | SQLSERVER*
    ...
    ...    *Parameters:*
    ...
    ...    <TableName>: It is the name of the table to be verified.
    ...
    ...    <ExpectedNumberOfRecords>: It is the expected number of records verifying the condition.
    ...
    ...    <WhereClause>: It is the condition identifying the records to be checked (standard SQL syntax for where clause).
    ...
    ...    *Requirements:*
    ...
    ...    The following java jar files are required:
    ...
    ...    jsqllib.jar(java db access lib)
    ...
    ...    ojdbc6.jar (JODBC drivers for Oracle) (*needed in case you have to connect to Oracle DBMS*).
    ...
    ...    sqljdbc4.jar (JODBC drivers for SQLServer) (*needed in case you have to connect to SQLServer DBMS*).
    ...
    ...    jconn3.jar (JODBC drivers for Sybase) (*needed in case you have to connect to Sybase DBMS*).
    ...
    ...    *Example:*
    ...
    ...    We want to verify that the number of records into the table TRADE verifying the condition Price=100.98 is 18
    ...
    ...    | SQL Check Number of Records of a Table | TRADE | 18 | Price=100.98 |
    org.robot.database.keywords.DatabaseLibrary.verifyNumberOfRows MatchingWhere    ${TableName}    ${WhereClause}    ${ExpectedNumberOfRecords}

SQL Insert New Record
    [Arguments]    ${TableName}    ${FieldNameList}    ${FieldValueList}
    [Documentation]    *Description:*
    ...
    ...    Use this command to add a new record into a table of the db.
    ...
    ...    The command calls a standard INSERT SQL command: INSERT INTO ${TableName} (${FieldNameList}) VALUES (${FieldValueList})
    ...
    ...    The supported DBMS are:
    ...
    ...    *SYBASE | ORACLE | SQLSERVER*
    ...
    ...    *Parameters:*
    ...
    ...    <TableName>: It is the name of the table where we want to add the record.
    ...
    ...    <FieldNameList>: It is the list of fields we want populate adding the record. It can be either a simple field name or a list of fields (separated by comma character).
    ...
    ...    Example: Price,Qty
    ...
    ...    <FieldValueList>: It is the list of the values populating the list of the fields (above). It can be either a simple field value or a list of fields values (separated by comma character).
    ...
    ...    Example: 100.34,50
    ...
    ...    *Requirements:*
    ...
    ...    The following java jar files are required:
    ...
    ...    jsqllib.jar(java db access lib)
    ...
    ...    ojdbc6.jar (JODBC drivers for Oracle) (*needed in case you have to connect to Oracle DBMS*).
    ...
    ...    sqljdbc4.jar (JODBC drivers for SQLServer) (*needed in case you have to connect to SQLServer DBMS*).
    ...
    ...    jconn3.jar (JODBC drivers for Sybase) (*needed in case you have to connect to Sybase DBMS*).
    ...
    ...    *Example:*
    ...
    ...    We want to add a new record into the TRADE table populating the fields Price=100.1 and Qty=20
    ...
    ...    | SQL Insert New Record | TRADE | Price,Qty | 100.1,20 |
    ${SQLCommandStr}    SetVariable    INSERT INTO ${TableName} (${FieldNameList}) VALUES (${FieldValueList})
    Log    ${SQLCommandStr}
    org.robot.database.keywords.DatabaseLibrary.ExecuteSql    ${SQLCommandStr}

SQL Delete Record
    [Arguments]    ${TableName}    ${WhereClause}
    [Documentation]    *Description:*
    ...
    ...    Use this command to delete a record from a table of db.
    ...
    ...    The command calls a standard DELETE SQL command: DELETE FROM ${TableName} WHERE ${WhereClause}
    ...
    ...    The supported DBMS are:
    ...
    ...    *SYBASE | ORACLE | SQLSERVER*
    ...
    ...    *Parameters:*
    ...
    ...    <TableName>: It is the name of the table where you want to delete the record from.
    ...
    ...    <WhereClause>: It is the condition identifying the records to be deleted (standard SQL syntax for where clause).
    ...
    ...    *Requirements:*
    ...
    ...    The following java jar files are required:
    ...
    ...    jsqllib.jar(java db access lib)
    ...
    ...    ojdbc6.jar (JODBC drivers for Oracle) (*needed in case you have to connect to Oracle DBMS*).
    ...
    ...    sqljdbc4.jar (JODBC drivers for SQLServer) (*needed in case you have to connect to SQLServer DBMS*).
    ...
    ...    jconn3.jar (JODBC drivers for Sybase) (*needed in case you have to connect to Sybase DBMS*).
    ...
    ...    *Example:*
    ...
    ...    We want to delete a record into the TRADE table verifying the condition Id='TRD001'
    ...
    ...    | SQL Delete Record | TRADE | Id='TRD001' |
    ${SQLCommandStr}    SetVariable    DELETE FROM ${TableName} WHERE ${WhereClause}
    Builtin.Log    ${SQLCommandStr}
    org.robot.database.keywords.DatabaseLibrary.executeSql    ${SQLCommandStr}

SQL Update Record
    [Arguments]    ${TableName}    ${FieldNameList}    ${FieldValueList}    ${WhereClause}
    [Documentation]    *Description:*
    ...
    ...    Use this command to update a record into a table of db.
    ...
    ...    The command calls a standard UPDATE SQL command: UPDATE ${TableName} SET F1=V1, F2=V2,..,Fn=Vn WHERE ${WhereClause}
    ...
    ...    Where F1, F2,.., Fn are the fields belonging to ${FieldNameList}
    ...
    ...    V1, V2,.., Vn are the fields belonging to ${FieldValueList}
    ...
    ...
    ...
    ...    The supported DBMS are:
    ...
    ...    *SYBASE | ORACLE | SQLSERVER*
    ...
    ...    *Parameters:*
    ...
    ...    <TableName>: It is the name of the table where you want to update the record.
    ...
    ...    <FieldNameList>: It is the list of fields you want to update. It can be either a simple field name or a list of fields names (separated by comma character).
    ...
    ...    <FieldValueList>: It is the list of the values to populate the fields list (above). It can be either a simple field value or a list of fields values (separated by comma character).
    ...
    ...    Example: 100.2,20,'IT0190991'
    ...
    ...    <WhereClause>: It is the condition identifying the records to be updated (standard SQL syntax for where clause).
    ...
    ...    *Requirements:*
    ...
    ...    The following java jar files are required:
    ...
    ...    jsqllib.jar(java db access lib)
    ...
    ...    ojdbc6.jar (JODBC drivers for Oracle) (*needed in case you have to connect to Oracle DBMS*).
    ...
    ...    sqljdbc4.jar (JODBC drivers for SQLServer) (*needed in case you have to connect to SQLServer DBMS*).
    ...
    ...    jconn3.jar (JODBC drivers for Sybase) (*needed in case you have to connect to Sybase DBMS*).
    ...
    ...    *Example:*
    ...
    ...    We want to update a record into the TRADE identified by Id='TRD001'. We want to update the fields Price, Qty and InstrumentId with the values 100.2, 20 and 'IT01909912'
    ...
    ...    | SQL Update Record | TRADE | Price,Qty,InstrumentId | 100.2,20,'IT01909912' |
    ${SetClause}    Set Variable    ${EMPTY}
    @{FNList}=    Split String    ${FieldNameList}    ,
    @{FVList}=    Split String    ${FieldValueList}    ,
    ${nelemlist_fn}    Get Length    ${FNList}
    ${nelemlist_fv}    Get Length    ${FVList}
    Run Keyword If    ${nelemlist_fn}!=${nelemlist_fv}    FailForDifferentNumberArgSQLUpdate    ${FieldNameList}    ${FieldValueList}
    : FOR    ${index}    IN RANGE    0    ${nelemlist_fn}
    \    ${field_name}    Get From List    ${FNList}    ${index}
    \    ${field_value}    Get From List    ${FVList}    ${index}
    \    ${SetClause}    Catenate    ${SetClause}    ${field_name}    =    ${field_value}    ,
    ${len_set_clause}    Get Length    ${SetClause}
    ${len_clausenocomma}    Evaluate    ${len_set_clause}-1
    ${SetClauseNoComma}    Get Substring    ${SetClause}    0    ${len_clausenocomma}
    ${SQLCommandStr}    SetVariable    UPDATE ${TableName} SET ${SetClauseNoComma} WHERE ${WhereClause}
    Builtin.Log    ${SQLCommandStr}
    org.robot.database.keywords.DatabaseLibrary.executeSql    ${SQLCommandStr}

SQL Execute Procedure
    [Arguments]    ${Procedure}
    [Documentation]    *Description:*
    ...
    ...    Use this command to execute any sql procedure. The command does not execute any check to verify the command. The command syntax has to be supported by the DBMS connected.
    ...
    ...    The command is executed as it has been passed.
    ...
    ...
    ...
    ...    The supported DBMS are:
    ...
    ...    *SYBASE | ORACLE | SQLSERVER*
    ...
    ...    *Parameters:*
    ...
    ...    <Procedure>: It is the procedure to be executed.
    ...
    ...    *Requirements:*
    ...
    ...    The following java jar files are required:
    ...
    ...    jsqllib.jar(java db access lib)
    ...
    ...    ojdbc6.jar (JODBC drivers for Oracle) (*needed in case you have to connect to Oracle DBMS*).
    ...
    ...    sqljdbc4.jar (JODBC drivers for SQLServer) (*needed in case you have to connect to SQLServer DBMS*).
    ...
    ...    jconn3.jar (JODBC drivers for Sybase) (*needed in case you have to connect to Sybase DBMS*).
    ...
    ...    *Example:*
    ...
    ...    We want to execute a procedure to update a db:
    ...
    ...    | SQL Execute Procedure | ALTER TABLE CLAUDIO ADD F4 real NULL |
    Builtin.Log    ${Procedure}
    org.robot.database.keywords.DatabaseLibrary.executeSql    ${Procedure}

SQL Execute Procedure From File
    [Arguments]    ${FileName}
    [Documentation]    *Description:*
    ...
    ...    Use this command to execute any sql procedure from a file on disk. The command does not execute any check to verify the command. The command syntax has to be supported by the DBMS connected. Each sql command has to be ended with character ;
    ...
    ...    The command is executed as it has been passed.
    ...
    ...
    ...
    ...    The supported DBMS are:
    ...
    ...    *SYBASE | ORACLE | SQLSERVER*
    ...
    ...    *Parameters:*
    ...
    ...    <File>: It is the name of file containing the procedure to be executed (completed by path in case it is placed into a different location then working directory of RobotFramework).
    ...
    ...    *Requirements:*
    ...
    ...    The following java jar files are required:
    ...
    ...    jsqllib.jar(java db access lib)
    ...
    ...    ojdbc6.jar (JODBC drivers for Oracle) (*needed in case you have to connect to Oracle DBMS*).
    ...
    ...    sqljdbc4.jar (JODBC drivers for SQLServer) (*needed in case you have to connect to SQLServer DBMS*).
    ...
    ...    jconn3.jar (JODBC drivers for Sybase) (*needed in case you have to connect to Sybase DBMS*).
    ...
    ...    *Example:*
    ...
    ...    We want to execute a procedure to update a db. The procedure is stored into the file proc.sql placed into the dir c:\\SQLProc:
    ...
    ...    | SQL Execute Procedure From File | c:\\SQLProc\\proc.sql |
    ...
    ...    Where proc.sql contains the commands:
    ...
    ...    CREATE TABLE CLAUDIO (F1 char(50), F2 float);
    ...
    ...    Go;
    ...
    ...    INSERT INTO CLAUDIO (F1,F2) VALUES ('claudio',1);
    ...
    ...    Go;
    Log    ${FileName}
    org.robot.database.keywords.DatabaseLibrary.executeSqlFromFile    ${FileName}

SQL Get Column Value From a Record
    [Arguments]    ${TableNames}    ${FieldName}    ${WhereClause}
    [Documentation]    *Description:* Use this command to get the value of a field from the record verifying the <WhereClause>.
    ...
    ...    *Important:* If the number of records verifying the <WhereClause> is more than one, then the command will be closed with an *error* (*Robot Framework will close with an error*)
    ...
    ...    The command calls the Standard SQL Select command as: Select <FieldName> from <TableName> where <WhereClause> and then uses the java function to store the result in a result set.
    ...
    ...    The supported DBMS are:
    ...
    ...    *SYBASE | ORACLE | SQLSERVER*
    ...
    ...    *Parameters:*
    ...
    ...    <TableNames>: The name of the table/tables to be used into *from* section of select command. It is possible to put more than one tables. In this case each table has to be separated by comma (,).
    ...
    ...    <FieldName>: It is the Name of the field for which we want to get the value. *Only one field is supported*.
    ...
    ...    <WhereClause>: It is the condition used from the select command.
    ...
    ...    *Requirements:*
    ...
    ...    The following java jar files are required:
    ...
    ...    jsqllib.jar(java db access lib)
    ...
    ...    ojdbc6.jar (JODBC drivers for Oracle) (needed in case you have to connect to Oracle DBMS).
    ...
    ...    sqljdbc4.jar (JODBC drivers for SQLServer) (needed in case you have to connect to SQLServer DBMS).
    ...
    ...    jconn3.jar (JODBC drivers for Sybase) (needed in case you have to connect to Sybase DBMS).
    ...
    ...    *Example:*
    ...
    ...    Select a simple value verifying a condition on one table:
    ...
    ...    | SQL Get Column Value From a Record | dmn_SYS_C_USERS | dmn_UserName | dmn_UserID=121 |
    ...
    ...    Select a value verifying a condition on two tables:
    ...
    ...    | SQL Get Column Value From a Record | dmn_SYS_C_USERS,dmn_SYS_C_USERGROUP dmn_GroupID | dmn_UserName | dmn_SYS_C_USERS.dmn_UserID=dmn_SYS_C_USERGROUP.dmn_UserID And dmn_SYS_C_USERS.dmn_UserID=121 |
    ${fieldValueResult}=    Set Variable    ${EMPTY}
    ${fieldValueResult}=    org.robot.database.keywords.DatabaseLibrary.readSingleValueFromTable    ${TableNames}    ${FieldName}    ${WhereClause}
    [Return]    ${fieldValueResult}

SQL Get Multiple Column Values From Multiple Records
    [Arguments]    ${TableNames}    ${FieldNames}    ${WhereClause}
    [Documentation]    *Description:* Use this command to get the value of a set of fields from the records verifying the <WhereClause>.
    ...
    ...
    ...
    ...    *Return Value*
    ...
    ...    It returns a list of lists of values of each column of each record
    ...
    ...    The command calls the Standard SQL Select command as: Select <FieldNames> from <TableNames> where <WhereClause> and then uses the java function to store the result in a result set.
    ...
    ...    The supported DBMS are:
    ...
    ...    *SYBASE | ORACLE | SQLSERVER*
    ...
    ...    *Parameters:*
    ...
    ...    <TableNames>: The name of the table/tables to be used into *from* section of select command. It is possible to put more than one tables. In this case each table has to be separated by comma (,).
    ...
    ...    <FieldNames>: It is the Name of the fields for which we want to get the value.
    ...
    ...    <WhereClause>: It is the condition used from the select command.
    ...
    ...    *Requirements:*
    ...
    ...    The following java jar files are required:
    ...
    ...    jsqllib.jar(java db access lib)
    ...
    ...    ojdbc6.jar (JODBC drivers for Oracle) (needed in case you have to connect to Oracle DBMS).
    ...
    ...    sqljdbc4.jar (JODBC drivers for SQLServer) (needed in case you have to connect to SQLServer DBMS).
    ...
    ...    jconn3.jar (JODBC drivers for Sybase) (needed in case you have to connect to Sybase DBMS).
    ...
    ...    *Example:*
    ...
    ...    | SQL Get Multiple Column Values From Multiple Records | SYS_C_USERS | dmn_UserName,dmn_UserID | dmn_Type = 4 |
    @{ListValue}=    org.robot.database.keywords.DatabaseLibrary.getMultiValuesFromMultiColumn    ${TableNames}    ${FieldNames}    ${WhereClause}
    [Return]    @{ListValue}

SQL Get Number Of Records Verifying Where Clause
    [Arguments]    ${TableNames}    ${WhereClause}
    [Documentation]    *Description:* Use this command to receive the number of records verifying an SQL where clause.
    ...
    ...    The supported DBMS are:
    ...
    ...    *SYBASE | ORACLE | SQLSERVER*
    ...
    ...    *Parameters:*
    ...
    ...    <TableNames>: The name of the table/tables to be used into *from* section of select command. It is possible to put more than one tables. In this case each table has to be separated by comma (,).
    ...
    ...    <WhereClause>: It is the condition used from the select command.
    ...
    ...    *Requirements:*
    ...
    ...    The following java jar files are required:
    ...
    ...    jsqllib.jar(java db access lib)
    ...
    ...    ojdbc6.jar (JODBC drivers for Oracle) (needed in case you have to connect to Oracle DBMS).
    ...
    ...    sqljdbc4.jar (JODBC drivers for SQLServer) (needed in case you have to connect to SQLServer DBMS).
    ...
    ...    jconn3.jar (JODBC drivers for Sybase) (needed in case you have to connect to Sybase DBMS).
    ...
    ...    *Example:*
    ...
    ...    | ${num_rec}= | SQL Get Number Of Records Verifying Where Clause | SYS_C_USERS | dmn_Type = 4 |
    ${num_rec} =    org.robot.database.keywords.DatabaseLibrary.getNumberOfRowsMatchingWhere    ${TableNames}    ${WhereClause}
    # Private Keyword (Used by Public keyword implemented into this file)
    [Return]    ${num_rec}

FailForWrongDBType
    [Documentation]    *Private Keywords. DO NOT USE*
    Pause Execution    DBType can be populated with ORACLE | SYBASE | SQLSERVER
    Fail    DBType can be populated with ORACLE | SYBASE | SQLSERVER

FailForDifferentNumberArgSQLUpdate
    [Arguments]    ${FieldNameList}    ${FieldValueList}
    [Documentation]    *Private Keywords. DO NOT USE*
    Pause Execution    Error into SQL Update Record.\n\nNumber of elements of FieldNameList has to be equal to FieldValueList. FieldNameList = ${ FieldNameList}; FieldValueList=${FieldValueList}
    Fail    Error into SQL Update Record.\n\nNumber of elements of FieldNameList has to be equal to FieldValueList. FieldNameList = ${ FieldNameList}; FieldValueList=${FieldValueList}

AddComma
    [Arguments]    ${List}
    [Documentation]    *Private Keywords. DO NOT USE*
    ${List}    Catenate    ${List}    ,
    [Return]    ${List}
